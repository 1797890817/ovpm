// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type AuthStatusRequest struct {
}

func (m *AuthStatusRequest) Reset()                    { *m = AuthStatusRequest{} }
func (m *AuthStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*AuthStatusRequest) ProtoMessage()               {}
func (*AuthStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

type AuthAuthenticateRequest struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *AuthAuthenticateRequest) Reset()                    { *m = AuthAuthenticateRequest{} }
func (m *AuthAuthenticateRequest) String() string            { return proto.CompactTextString(m) }
func (*AuthAuthenticateRequest) ProtoMessage()               {}
func (*AuthAuthenticateRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *AuthAuthenticateRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *AuthAuthenticateRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type AuthStatusResponse struct {
	User *UserResponse_User `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
}

func (m *AuthStatusResponse) Reset()                    { *m = AuthStatusResponse{} }
func (m *AuthStatusResponse) String() string            { return proto.CompactTextString(m) }
func (*AuthStatusResponse) ProtoMessage()               {}
func (*AuthStatusResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func (m *AuthStatusResponse) GetUser() *UserResponse_User {
	if m != nil {
		return m.User
	}
	return nil
}

type AuthAuthenticateResponse struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
}

func (m *AuthAuthenticateResponse) Reset()                    { *m = AuthAuthenticateResponse{} }
func (m *AuthAuthenticateResponse) String() string            { return proto.CompactTextString(m) }
func (*AuthAuthenticateResponse) ProtoMessage()               {}
func (*AuthAuthenticateResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{3} }

func (m *AuthAuthenticateResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func init() {
	proto.RegisterType((*AuthStatusRequest)(nil), "pb.AuthStatusRequest")
	proto.RegisterType((*AuthAuthenticateRequest)(nil), "pb.AuthAuthenticateRequest")
	proto.RegisterType((*AuthStatusResponse)(nil), "pb.AuthStatusResponse")
	proto.RegisterType((*AuthAuthenticateResponse)(nil), "pb.AuthAuthenticateResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AuthService service

type AuthServiceClient interface {
	Status(ctx context.Context, in *AuthStatusRequest, opts ...grpc.CallOption) (*AuthStatusResponse, error)
	Authenticate(ctx context.Context, in *AuthAuthenticateRequest, opts ...grpc.CallOption) (*AuthAuthenticateResponse, error)
}

type authServiceClient struct {
	cc *grpc.ClientConn
}

func NewAuthServiceClient(cc *grpc.ClientConn) AuthServiceClient {
	return &authServiceClient{cc}
}

func (c *authServiceClient) Status(ctx context.Context, in *AuthStatusRequest, opts ...grpc.CallOption) (*AuthStatusResponse, error) {
	out := new(AuthStatusResponse)
	err := grpc.Invoke(ctx, "/pb.AuthService/Status", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) Authenticate(ctx context.Context, in *AuthAuthenticateRequest, opts ...grpc.CallOption) (*AuthAuthenticateResponse, error) {
	out := new(AuthAuthenticateResponse)
	err := grpc.Invoke(ctx, "/pb.AuthService/Authenticate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AuthService service

type AuthServiceServer interface {
	Status(context.Context, *AuthStatusRequest) (*AuthStatusResponse, error)
	Authenticate(context.Context, *AuthAuthenticateRequest) (*AuthAuthenticateResponse, error)
}

func RegisterAuthServiceServer(s *grpc.Server, srv AuthServiceServer) {
	s.RegisterService(&_AuthService_serviceDesc, srv)
}

func _AuthService_Status_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).Status(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AuthService/Status",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).Status(ctx, req.(*AuthStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_Authenticate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthAuthenticateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).Authenticate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AuthService/Authenticate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).Authenticate(ctx, req.(*AuthAuthenticateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.AuthService",
	HandlerType: (*AuthServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Status",
			Handler:    _AuthService_Status_Handler,
		},
		{
			MethodName: "Authenticate",
			Handler:    _AuthService_Authenticate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth.proto",
}

func init() { proto.RegisterFile("auth.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 289 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x41, 0x4e, 0xf3, 0x30,
	0x10, 0x85, 0x95, 0xe8, 0xff, 0x2b, 0x98, 0x22, 0xa1, 0x1a, 0x4a, 0x23, 0xd3, 0x45, 0xe5, 0x15,
	0xb0, 0x48, 0xa0, 0xec, 0xd8, 0x20, 0x6e, 0x00, 0x45, 0x1c, 0xc0, 0x29, 0xa3, 0x36, 0x2a, 0xd8,
	0x26, 0x1e, 0x97, 0x3d, 0x57, 0xe0, 0x5a, 0xec, 0xb8, 0x02, 0x07, 0x41, 0xb6, 0x93, 0x2a, 0xa2,
	0x5d, 0x44, 0xca, 0x9b, 0x37, 0xf3, 0xbe, 0xc9, 0x04, 0x40, 0x3a, 0x5a, 0xe6, 0xa6, 0xd6, 0xa4,
	0x59, 0x6a, 0x4a, 0x3e, 0x5e, 0x68, 0xbd, 0x78, 0xc1, 0x42, 0x9a, 0xaa, 0x90, 0x4a, 0x69, 0x92,
	0x54, 0x69, 0x65, 0x63, 0x07, 0x07, 0x67, 0xb1, 0x8e, 0xef, 0xe2, 0x08, 0x06, 0x77, 0x8e, 0x96,
	0x8f, 0x24, 0xc9, 0xd9, 0x19, 0xbe, 0x39, 0xb4, 0x24, 0x1e, 0x60, 0xe4, 0x8b, 0xfe, 0x41, 0x45,
	0xd5, 0x5c, 0x12, 0x36, 0x16, 0xe3, 0xb0, 0xe7, 0xa7, 0x95, 0x7c, 0xc5, 0x2c, 0x99, 0x24, 0x67,
	0xfb, 0xb3, 0x8d, 0xf6, 0x9e, 0x91, 0xd6, 0xbe, 0xeb, 0xfa, 0x39, 0x4b, 0xa3, 0xd7, 0x6a, 0x71,
	0x0b, 0xac, 0xcb, 0xb1, 0x46, 0x2b, 0x8b, 0xec, 0x1c, 0xfe, 0xf9, 0xe9, 0x90, 0xd4, 0x9f, 0x0e,
	0x73, 0x53, 0xe6, 0x4f, 0x16, 0xeb, 0xd6, 0x8f, 0x22, 0xb4, 0x88, 0x4b, 0xc8, 0xb6, 0x77, 0x6a,
	0x62, 0x8e, 0xe1, 0x3f, 0xe9, 0x15, 0xaa, 0x66, 0xa3, 0x28, 0xa6, 0x5f, 0x09, 0xf4, 0x03, 0x13,
	0xeb, 0x75, 0x35, 0x47, 0x76, 0x0f, 0xbd, 0x88, 0x67, 0x01, 0xb4, 0xf5, 0xd9, 0xfc, 0xe4, 0x6f,
	0x39, 0xc6, 0x8b, 0xd1, 0xc7, 0xf7, 0xcf, 0x67, 0x3a, 0x60, 0x87, 0xc5, 0xfa, 0xaa, 0xf0, 0x97,
	0x2e, 0x6c, 0xcc, 0x59, 0xc1, 0x41, 0x77, 0x1f, 0x76, 0xda, 0x06, 0xec, 0xb8, 0x1c, 0x1f, 0xef,
	0x36, 0x1b, 0xc6, 0x24, 0x30, 0xb8, 0x18, 0x6e, 0x18, 0xb2, 0xd3, 0x76, 0x93, 0x5c, 0x94, 0xbd,
	0xf0, 0xc3, 0xae, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x4d, 0x24, 0x8e, 0x73, 0xec, 0x01, 0x00,
	0x00,
}
